function init(self)
	msg.post('.', 'acquire_input_focus')
	-- disable flame reactor sprite
	msg.post('#thrust_sprite', 'disable')

	-- set input actions to false
	self.left = false
	self.right = false
	self.up = false
	self.down = false
	self.action = false

	-- set constants and instance values
	self.ANGULAR_SPEED = 200
	self.speed = 0
	self.MAX_SPEED = 600
	self.THRUST_POWER = 300
	self.dx = 0
	self.dy = 0
end

function update(self, dt)
	local angle = go.get('.', 'euler.z')
	
	if self.left then
		angle = angle + self.ANGULAR_SPEED * dt
		go.set('.', 'euler.z', angle)
	end
	
	if self.right then
		angle = angle - self.ANGULAR_SPEED * dt
		go.set('.', 'euler.z', angle)
	end
	
	if self.up then
		self.speed = self.speed + self.THRUST_POWER * dt
	end
	
	if self.down then
		self.speed = self.speed - self.THRUST_POWER * 2 * dt
	end
	
	if self.speed <= 0 then
		self.speed = 0
		-- disable flame reactor sprite
		msg.post('#thrust_sprite', 'disable')
	else
		-- enable flame reactor sprite
		msg.post('#thrust_sprite', 'enable')
	end

	-- locks ship's speed to a max speed
	if self.speed > self.MAX_SPEED then
		self.speed = self.MAX_SPEED
	end

	-- calculate the new velocity vector
	self.dx = math.cos(math.rad(angle)) * self.speed * dt
	self.dy = math.sin(math.rad(angle)) * self.speed * dt

	local position = go.get_position()
	position.x = position.x + self.dx
	position.y = position.y + self.dy
	if position.x > 1280 then
		position.x = 0
	end
	if position.x < 0 then
		position.x = 1280
	end
	if position.y > 720 then
		position.y = 0
	end
	if position.y < 0 then
		position.y = 720
	end
	go.set_position(position)

	if self.action then
		--create a bullet
		local angle = go.get('.', 'euler.z')
		factory.create("factories#ship_bullet_factory", position, go.get_rotation(), {dx = math.cos(math.rad(angle)), dy = math.sin(math.rad(angle))})
		self.action = false
	end
end

function on_input(self, action_id, action)
	self.left = action_id == hash('left') and not action.released
	self.right = action_id == hash('right') and not action.released
	self.up = action_id == hash('up') and not action.released
	self.down = action_id == hash('down') and not action.released
	self.action = action_id == hash('action') and action.released
end
